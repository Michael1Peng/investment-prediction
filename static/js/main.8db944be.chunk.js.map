{"version":3,"sources":["components/Chart.js","api.js","components/InvestForm.js","components/RecommendTable.js","pages/Strategies.js","App.js","index.js"],"names":["baseOptions","legend","data","xAxis","type","name","yAxis","series","Chart","style","title","useEffect","width","height","xData","seriesData","options","cloneDeep","text","echarts","init","document","getElementById","setOption","id","fetchData","key","params","a","http","method","url","res","chartData","dates","map","d","split","value","hushen","answer","rate","defaults","baseURL","layout","labelCol","span","wrapperCol","InvestForm","onResponse","tab","values","startDate","format","b","endDate","c","price","amount","onFinish","Item","label","rules","required","message","htmlType","float","RecommendTable","recommendations","useState","source","setSource","tempSource","i","length","push","stocks","dataSource","columns","dataIndex","Header","Layout","Content","Strategies","activeTabs","setActiveTabs","setData","setRate","setRecommendations","mode","selectedKeys","onClick","e","padding","App","path","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8db944be.chunk.js","sourcesContent":["import React, {useEffect} from \"react\";\nimport cloneDeep from 'lodash/cloneDeep';\nimport echarts from 'echarts'\nimport 'echarts/lib/chart/bar';\nimport 'echarts/lib/chart/line';\nimport 'echarts/lib/component/tooltip';\nimport 'echarts/lib/component/title';\nimport 'echarts/lib/component/legend';\nimport 'echarts/lib/component/toolbox';\nimport 'echarts/lib/component/markPoint';\nimport 'echarts/lib/component/markLine';\n\n// 折线图的基本设置\n// need to fill: title, xAxis.data, series[0].data, series[1].data\nlet baseOptions = {\n  legend: {\n    data: ['策略收益', '指数']\n  },\n  // 横轴显示日期\n  xAxis: {\n    type: 'category',\n    name: '日期'\n  },\n  yAxis: {\n    type: 'value',\n    name: '%'\n  },\n  series: [\n    {\n      name: '策略收益',\n      type: 'line'\n    }, {\n      name: '指数',\n      type: 'line'\n    }\n  ]\n}\n\nfunction Chart({style, data, title}) {\n  useEffect(() => {\n    style = style || {width: '100%', height: 500};\n    let {xData, seriesData} = data;\n\n    let options = cloneDeep(baseOptions);\n    options.title = {text: title};\n    options.xAxis.data = xData;\n    // 第一个数组是收益\n    options.series[0].data = seriesData[0]\n    // 第二个数组是指数\n    options.series[1].data = seriesData[1]\n\n    var myChart = echarts.init(document.getElementById('chart'));\n    // 绘制图表\n    myChart.setOption(options);\n  }, [style, data, title])\n\n  return <div id='chart' style={{width: '100%', height: 500}}/>\n}\n\nexport default Chart\n","import http from 'axios'\n\nhttp.defaults.baseURL = 'http://api.scutquant.com/tactics/';\n\nasync function fetchData(key, params) {\n  let res = await http({\n    method: 'get',\n    url: key,\n    params\n  })\n  let {data} = res\n  debugger\n  let chartData = {\n    xData: data.dates.map(d => d.split('T')[0]),\n    seriesData: [data.value, data.hushen]\n  }\n  return {\n    chartData,\n    answer: data.answer,\n    rate: data.rate\n  }\n}\n\nexport {fetchData}\n","import React from \"react\";\nimport {Form, Input, Button, DatePicker} from \"antd\";\nimport {fetchData} from \"../api\";\n\nconst layout = {\n  labelCol: {span: 8},\n  wrapperCol: {span: 16},\n};\n\nfunction InvestForm({onResponse, tab, rate}) {\n  async function onFinish(values) {\n    debugger\n    let params = {\n      a: values.startDate.format('YYYY-MM-DD'),\n      b: values.endDate.format('YYYY-MM-DD'),\n      c: values.price,\n      d: values.amount\n    }\n    let res = await fetchData(tab, params)\n    onResponse(res)\n  }\n\n  return <Form {...layout} name='investForm' onFinish={onFinish}>\n    <Form.Item label='起始日期:' name='startDate' rules={[{required: true, message: '请输入起始日期'}]}>\n      <DatePicker style={{width: '100%'}} format={'YYYY-MM-DD'}/>\n    </Form.Item>\n    <Form.Item label='结束日期:' name='endDate' rules={[{required: true, message: '请输入结束日期'}]}>\n      <DatePicker style={{width: '100%'}} format={'YYYY-MM-DD'}/>\n    </Form.Item>\n    <Form.Item label='起始金额:' name='price' rules={[{required: true, message: '请输入起始金额'}]}>\n      <Input/>\n    </Form.Item>\n    <Form.Item label='交易数量:' name='amount' rules={[{required: true, message: '请输入交易数量'}]}>\n      <Input/>\n    </Form.Item>\n    <Form.Item label='收益率:' name='rate'>\n      {rate || 0}\n    </Form.Item>\n    <Form.Item>\n      <Button type='primary' htmlType='submit' style={{float: \"right\"}}>\n        提交\n      </Button>\n    </Form.Item>\n  </Form>\n}\n\nexport default InvestForm\n","import React, {useState, useEffect} from \"react\";\nimport {Table} from \"antd\";\n\nfunction RecommendTable({recommendations}) {\n  const columns = [\n    {\n      title: '股票列表',\n      dataIndex: 'stocks',\n      key: 'stocks'\n    },\n    {\n      title: '推荐值',\n      dataIndex: 'rate',\n      key: 'rate'\n    }\n  ]\n\n  const [source, setSource] = useState([{}])\n\n  useEffect(() => {\n    let tempSource = []\n    for (let i = 0; i < recommendations.length; i++) {\n      tempSource.push({\n        stocks: recommendations[i][0],\n        rate: recommendations[i][1]\n      })\n    }\n    setSource(tempSource)\n  }, [recommendations])\n\n  return <Table dataSource={source} columns={columns}/>\n}\n\nexport default RecommendTable\n","import React, {useState} from \"react\";\nimport {Layout, Menu, Row, Col} from \"antd\";\nimport Chart from \"../components/Chart\";\nimport InvestForm from \"../components/InvestForm\";\nimport RecommendTable from \"../components/RecommendTable\";\n\nconst {Header, Content} = Layout;\n\nfunction Strategies() {\n  // 导航栏数据\n  let navItems = [{\n    title: '连跌买进策略',\n    key: 'one'\n  }, {\n    title: '收益率前n策略',\n    key: 'two'\n  }, {\n    title: '小市值策略',\n    key: 'three'\n  }, {\n    title: '单股sma策略',\n    key: 'four'\n  }]\n  const [activeTabs, setActiveTabs] = useState('one')\n\n  function clickTab(e) {\n    setActiveTabs(e.key)\n  }\n\n  // 图表数据\n  const [data, setData] = useState({xData: [], seriesData: [[], []]})\n\n  const [rate, setRate] = useState(0)\n  const [recommendations, setRecommendations] = useState([[], []])\n\n  function onResponse(res) {\n    setData(res.chartData)\n    setRate(res.rate)\n    setRecommendations(res.answer)\n  }\n\n  return <Layout>\n    <Header>\n      <Menu mode='horizontal' selectedKeys={[activeTabs]} onClick={clickTab}>\n        {navItems.map(i => <Menu.Item key={i.key}>{i.title}</Menu.Item>)}\n      </Menu>\n    </Header>\n    <Content style={{padding: '15px', 'background-color': 'white'}}>\n      <Row>\n        <Col span={16}>\n          <Chart data={data}/>\n          <RecommendTable recommendations={recommendations}/>\n        </Col>\n        <Col span={6}>\n          <InvestForm tab={activeTabs} onResponse={onResponse} rate={rate}/>\n        </Col>\n      </Row>\n    </Content>\n  </Layout>\n}\n\nexport default Strategies\n","import React from \"react\";\nimport Strategies from './pages/Strategies'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n} from \"react-router-dom\";\n\nfunction App() {\n\n  return <Router>\n    <div>\n      <Switch>\n        <Route path='/'>\n          <Strategies/>\n        </Route>\n      </Switch>\n    </div>\n  </Router>\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}